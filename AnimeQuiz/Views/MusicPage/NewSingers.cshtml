@model AnimeQuiz.Models.ViewModels.MusicAvailableSinger

@{
    ViewData["Title"] = $"New Singers for {Model.MusicDto.MusicName}";
}

<div class="d-flex justify-content-between align-items-center">
    <h1>@ViewData["Title"]</h1>
    <a class="text-decoration-none" href="javascript:history.back()">
        <h2>
            Back
        </h2>
    </a>
</div>

<hr />

<style>
    .choice + .choice {
        border-top: 1px solid black;
        margin-top: 0.25em;
        padding-top: 0.25em;
    }
</style>

<dl class="row fs-4">
    <div>
        <dt class="mb-2 d-flex justify-content-between align-items-center">
            Available Singers:
        </dt>
        <dd>
            @if (Model.StaffDtos.Count() != 0)
            {
                <form method="POST"
                      asp-controller="MusicPage"
                      asp-action="AddSingers"
                      asp-route-id="@Model.MusicDto.MusicId"
                      class="mt-3 flex-grow-1 d-flex flex-column gap-3"
                      id="add-singer-form">
                    @foreach (StaffDto staffDto in Model.StaffDtos)
                    {
                        <div class="choice">
                            <input class="form-check-input" type="checkbox" name="SingerIds" id="@staffDto.StaffId" value="@staffDto.StaffId" />
                            <label class="form-check-label ms-2" for="@staffDto.StaffId">@staffDto.StaffName</label>
                        </div>
                    }

                    <div class="d-flex justify-content-end gap-3">
                        <button type="submit" class="btn btn-primary btn-lg" id="add-button">
                            Add
                        </button>
                    </div>
                </form>
            }
            else
            {
                <p>No Available Singer</p>
            }
        </dd>
    </div>
</dl>
