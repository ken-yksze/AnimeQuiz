@model AnimeQuiz.Models.AnimeDto

@{
    ViewData["Title"] = $"New Musics for {Model.AnimeName}";
}

<div class="d-flex justify-content-between align-items-center">
    <h1>@ViewData["Title"]</h1>
    <a class="text-decoration-none" href="javascript:history.back()">
        <h2>
            Back
        </h2>
    </a>
</div>

<hr />

<form method="POST"
      asp-controller="AnimePage"
      asp-action="AddMusics"
      asp-route-id="@Model.AnimeId"
      enctype="multipart/form-data"
      class="mt-3 flex-grow-1 d-flex flex-column gap-3"
      id="music-upload-form">
    <div class="dropzone flex-grow-1 align-content-center" id="music-dropzone">
        <div class="dz-message needsclick">
            <h3>Drop music files here or click to upload</h3>
            <span class="note">Only mp3/m4a/wav/flac are allowed</span>
        </div>
    </div>

    <div class="d-flex justify-content-end gap-3">
        <button type="submit" class="btn btn-primary btn-lg" id="upload-button">
            Upload
        </button>
        <button type="button" class="btn btn-primary btn-lg" id="clear-button">
            Clear
        </button>
    </div>
</form>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.js"></script>
    <script>
        // Initialize Dropzone
        Dropzone.autoDiscover = false;

        const musicPreviewTemplate = `
            <div class="dz-preview dz-file-preview">
                <div class="dz-image"></div>
                <div class="dz-details">
                    <div class="dz-size" data-dz-size></div>
                    <div class="dz-filename"><span data-dz-name></span></div>
                    <audio class="dz-audio-player">Your browser does not support the audio element.</audio>
                    <i class="audio-control fa fa-play-circle-o" style="font-size: 24px; cursor: pointer"></i>
                </div>
                <div class="dz-name-input">
                </div>
            </div>
        `;

        const isAudioPlaying = (audio) => audio && audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2;

        const pageReady = () => {
            const musicDropzoneElem = new Dropzone("#music-dropzone", {
                url: "/Anime/@Model.AnimeId/AddMusics",
                paramName: () => "MusicFiles",
                autoProcessQueue: false,
                uploadMultiple: true,
                parallelUploads: 10,
                maxFilesize: 10, // MB
                maxFiles: 10,
                acceptedFiles: "audio/mpeg,audio/mp4,audio/x-m4a,audio/wav,audio/flac",
                addRemoveLinks: true,
                previewTemplate: musicPreviewTemplate,
                init: function (){
                    this.on("addedfile", function (file) {
                        const preview = file.previewElement;
                        const audioPlayer = preview.querySelector(".dz-audio-player");
                        const audioControl = preview.querySelector(".audio-control");

                        audioPlayer.src = URL.createObjectURL(file);

                        audioPlayer.addEventListener("ended", function () {
                            audioControl.classList.remove("fa-pause-circle-o");
                            audioControl.classList.add("fa-play-circle-o");
                        });

                        audioPlayer.addEventListener("pause", function () {
                            audioControl.classList.remove("fa-pause-circle-o");
                            audioControl.classList.add("fa-play-circle-o");
                        });

                        audioPlayer.addEventListener("play", function () {
                            audioControl.classList.remove("fa-play-circle-o");
                            audioControl.classList.add("fa-pause-circle-o");
                        });

                        audioControl.addEventListener("click", function () {
                            if (isAudioPlaying(audioPlayer)) {
                                audioPlayer.pause();
                            }
                            else {
                                audioPlayer.play();
                            }
                        });

                        const musicNameInputId = crypto.randomUUID();
                        const musicNameLabel = document.createElement("label");
                        musicNameLabel.htmlFor = musicNameInputId;
                        musicNameLabel.innerText = "Music Name"
                        const musicNameInput = document.createElement("input");
                        musicNameInput.type = "text";
                        musicNameInput.name = "MusicNames"
                        musicNameInput.id = musicNameInputId;
                        musicNameInput.style.width = preview.offsetWidth + "px";

                        preview.querySelector(".dz-name-input").appendChild(musicNameLabel);
                        musicNameLabel.after(musicNameInput);
                    });

                    this.on("removedfile", function (file) {
                        const audioPlayer = file.previewElement.querySelector(".dz-audio-player");

                        URL.revokeObjectURL(audioPlayer.src);
                    });
                }
            });

            musicDropzoneElem.disable = function() {
                this.enabled = false;
                this.element.classList.add('dz-disabled');
            };

            musicDropzoneElem.enable = function() {
                this.enabled = true;
                this.element.classList.remove('dz-disabled');
            };

            $(".btn").mouseleave(function () {
                $(this).blur();
            });

            $("#clear-button").click(() => musicDropzoneElem.removeAllFiles(true));

            $("#music-upload-form").on("submit",
                function (event) {
                    event.preventDefault();
                    $(this).find(":input").prop("disabled", true);
                    musicDropzoneElem.disable();

                    const formData = new FormData();

                    $(this).find('input[name="MusicNames"]').each(function () {
                        formData.append("MusicNames", $(this).val());
                    });

                    const dropzoneFiles = musicDropzoneElem.getAcceptedFiles();
                    dropzoneFiles.forEach((dropzoneFile) => formData.append("MusicFiles", dropzoneFile));

                    fetch("/Anime/@Model.AnimeId/AddMusics",
                        {
                            method: "POST",
                            body: formData
                        }
                    )
                    .then(response => {
                        $(this).find(":input").prop("disabled", false);
                        musicDropzoneElem.enable();

                        if (response.redirected) {
                            window.location.replace(response.url);
                        }

                        return response.text();
                    })
                    .then(html => $("main").html(html));
                }
            )
        }

        $(window).on("load", pageReady);
    </script>
}
